import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';

class CurvedPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    var paint = Paint()
      ..color = Colors.orange.withOpacity(0.5)
      ..style = PaintingStyle.stroke
      ..strokeWidth = 1.0;

    var path = Path();
    path.moveTo(0, 0);
    path.quadraticBezierTo(size.width / 2, 40, size.width, 0);

    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => false;
}

class TransactionDetailsScreen extends StatelessWidget {
  final Map<String, dynamic> transactionData;

  const TransactionDetailsScreen({
    Key? key,
    required this.transactionData,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFFFF5F5),
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.black),
          onPressed: () => Navigator.pop(context),
        ),
        title: const Text(
          'Transaction Details',
          style: TextStyle(color: Colors.black),
        ),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            Stack(
              clipBehavior: Clip.none,
              children: [
                // Curved line
                SizedBox(
                  width: double.infinity,
                  height: 60.h,
                  child: CustomPaint(
                    painter: CurvedPainter(),
                  ),
                ),
                // Sterling logo
                Positioned(
                  left: 0,
                  right: 0,
                  top: 20.h,
                  child: Center(
                    child: Container(
                      width: 80.w,
                      height: 80.w,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        shape: BoxShape.circle,
                        border: Border.all(
                          color: Colors.orange,
                          width: 1.5,
                        ),
                      ),
                      child: Center(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Container(
                              width: 12.w,
                              height: 12.w,
                              decoration: const BoxDecoration(
                                color: Colors.red,
                                shape: BoxShape.circle,
                              ),
                            ),
                            SizedBox(height: 4.h),
                            Text(
                              'Sterling',
                              style: TextStyle(
                                color: Colors.black87,
                                fontSize: 14.sp,
                                fontWeight: FontWeight.w500,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 60.h),
            Padding(
              padding: EdgeInsets.symmetric(horizontal: 20.w),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(
                    'Outgoing Transfer to ${transactionData['beneficiary']}',
                    style: TextStyle(
                      fontSize: 18.sp,
                      fontWeight: FontWeight.w500,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  SizedBox(height: 20.h),
                  Text(
                    '- ₦ ${transactionData['amount']}',
                    style: TextStyle(
                      fontSize: 32.sp,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  SizedBox(height: 10.h),
                  Text(
                    'Successful',
                    style: TextStyle(
                      color: Colors.green,
                      fontSize: 16.sp,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  SizedBox(height: 20.h),
                  Container(
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(12.r),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.05),
                          blurRadius: 10,
                          offset: const Offset(0, 5),
                        ),
                      ],
                    ),
                    padding: EdgeInsets.all(20.w),
                    child: Column(
                      children: [
                        _buildDetailRow('Service Charge',
                            '₦${transactionData['serviceCharge']}'),
                        Divider(height: 30.h),
                        _buildDetailRow(
                          'Total Amount Paid',
                          '₦${transactionData['totalAmount']}',
                          isBold: true,
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 30.h),
                  Container(
                    width: double.infinity,
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(12.r),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.05),
                          blurRadius: 10,
                          offset: const Offset(0, 5),
                        ),
                      ],
                    ),
                    padding: EdgeInsets.all(20.w),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            Text(
                              'Details',
                              style: TextStyle(
                                fontSize: 20.sp,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            SizedBox(width: 8.w),
                            Container(
                              padding: EdgeInsets.all(8.w),
                              decoration: const BoxDecoration(
                                color: Colors.amber,
                                shape: BoxShape.circle,
                              ),
                              child: Text(
                                'E',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 14.sp,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 20.h),
                        _buildDetailRow(
                            'Beneficiary Name', transactionData['beneficiary']),
                        SizedBox(height: 15.h),
                        _buildDetailRow('Remark', transactionData['remark']),
                        SizedBox(height: 15.h),
                        _buildDetailRow('Transaction Date',
                            transactionData['transactionDate']),
                        SizedBox(height: 15.h),
                        _buildDetailRow('Transaction\nReference',
                            transactionData['reference']),
                        SizedBox(height: 15.h),
                        _buildDetailRow(
                            'Session ID', transactionData['sessionId']),
                      ],
                    ),
                  ),
                  SizedBox(height: 30.h),
                  SizedBox(
                    width: double.infinity,
                    child: ElevatedButton(
                      onPressed: () {
                        // Implement share functionality
                      },
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.orange,
                        padding: EdgeInsets.symmetric(vertical: 15.h),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(8.r),
                        ),
                      ),
                      child: Text(
                        'Share Receipt',
                        style: TextStyle(
                          fontSize: 16.sp,
                          fontWeight: FontWeight.w500,
                        ),
                      ),
                    ),
                  ),
                  SizedBox(height: 20.h),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDetailRow(String label, String value, {bool isBold = false}) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Expanded(
          flex: 2,
          child: Text(
            label,
            style: TextStyle(
              fontSize: 14.sp,
              color: Colors.grey[600],
            ),
          ),
        ),
        Expanded(
          flex: 3,
          child: Text(
            value,
            style: TextStyle(
              fontSize: 14.sp,
              fontWeight: isBold ? FontWeight.bold : FontWeight.normal,
              color: Colors.black,
            ),
            textAlign: TextAlign.right,
          ),
        ),
      ],
    );
  }
}

//----------------
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';

class CurvedPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    var paint = Paint()
      ..color = Colors.orange
      ..style = PaintingStyle.stroke
      ..strokeWidth = 1.0;

    var path = Path();
    path.moveTo(0, 0);
    path.quadraticBezierTo(size.width / 2, 40, size.width, 0);

    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => false;
}

class TransactionDetailsScreen extends StatelessWidget {
  final Map<String, dynamic> transactionData;

  const TransactionDetailsScreen({
    Key? key,
    required this.transactionData,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final bool isIncoming = !(transactionData['isOutgoing'] ?? false);

    return AppScaffoldWidget(
      padding: const EdgeInsets.all(0.0),
      // backgroundColor: const Color(0xFFFFF5F5),
      appBar: AppBar(
        backgroundColor: AppColors.appPrimaryColor,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.black),
          onPressed: () => Navigator.pop(context),
        ),
        title: const Text(
          'Transaction Details',
          style: TextStyle(color: Colors.black),
        ),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            Stack(
              clipBehavior: Clip.none,
              children: [
                // Curved line
                SizedBox(
                  width: double.infinity,
                  height: 60.h,
                  child: CustomPaint(
                    painter: CurvedPainter(),
                  ),
                ),
                // Sterling logo
                Positioned(
                  left: 0,
                  right: 0,
                  top: 20.h,
                  child: Center(
                    child: Container(
                      width: 80.w,
                      height: 80.w,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        shape: BoxShape.circle,
                        border: Border.all(
                          color: Colors.orange,
                          width: 1.5,
                        ),
                      ),
                      child: Center(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Container(
                              width: 12.w,
                              height: 12.w,
                              decoration: const BoxDecoration(
                                color: Colors.red,
                                shape: BoxShape.circle,
                              ),
                            ),
                            SizedBox(height: 4.h),
                            Text(
                              'Sterling',
                              style: TextStyle(
                                color: Colors.black87,
                                fontSize: 14.sp,
                                fontWeight: FontWeight.w500,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 60.h),
            Padding(
              padding: EdgeInsets.symmetric(horizontal: 20.w),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Center(
                    child: Text(
                      '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} ${transactionData['beneficiary']}',
                      style: TextStyle(
                        fontSize: 18.sp,
                        fontWeight: FontWeight.w500,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ),
                  SizedBox(height: 20.h),
                  Center(
                    child: Text(
                      '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount']}',
                      style: TextStyle(
                        fontSize: 32.sp,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                  SizedBox(height: 10.h),
                  Center(
                    child: Text(
                      'Successful',
                      style: TextStyle(
                        color: Colors.green,
                        fontSize: 16.sp,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ),
                  SizedBox(height: 40.h),
                  if (!isIncoming) ...[
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(
                          'Service Charge',
                          style: TextStyle(
                            fontSize: 14.sp,
                            color: Colors.grey[600],
                          ),
                        ),
                        Row(
                          children: [
                            Text(
                              '₦${transactionData['serviceCharge']}',
                              style: TextStyle(
                                fontSize: 14.sp,
                                color: Colors.black,
                              ),
                            ),
                            SizedBox(width: 8.w),
                          ],
                        ),
                      ],
                    ),
                    SizedBox(height: 8.h),
                    Divider(color: Colors.grey[300], height: 1),
                    SizedBox(height: 20.h),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(
                          'Total Amount Paid',
                          style: TextStyle(
                            fontSize: 14.sp,
                            color: Colors.grey[600],
                          ),
                        ),
                        Text(
                          '₦${transactionData['totalAmount']}',
                          style: TextStyle(
                            fontSize: 14.sp,
                            fontWeight: FontWeight.bold,
                            color: Colors.black,
                          ),
                        ),
                      ],
                    ),
                    SizedBox(height: 8.h),
                    Divider(color: Colors.grey[300], height: 1),
                    SizedBox(height: 30.h),
                  ],
                  if (isIncoming)
                    _buildDetailRow('Sender', transactionData['beneficiary'])
                  else
                    _buildDetailRow(
                        'Beneficiary Name', transactionData['beneficiary']),
                  if (!isIncoming) ...[
                    SizedBox(height: 30.h),
                    Row(
                      children: [
                        Text(
                          'Details',
                          style: TextStyle(
                            fontSize: 20.sp,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        SizedBox(width: 8.w),
                      ],
                    ),
                  ] else ...[
                    SizedBox(height: 30.h),
                    Text(
                      'Details',
                      style: TextStyle(
                        fontSize: 20.sp,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ],
                  SizedBox(height: 20.h),
                  _buildDetailRow('Remark', transactionData['remark']),
                  SizedBox(height: 20.h),
                  _buildDetailRow(
                      'Transaction Date', transactionData['transactionDate']),
                  SizedBox(height: 20.h),
                  _buildDetailRow(
                      'Transaction\nReference', transactionData['reference']),
                  SizedBox(height: 20.h),
                  _buildDetailRow('Session ID', transactionData['sessionId']),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: Padding(
        padding: EdgeInsets.all(20.w),
        child: SizedBox(
          width: double.infinity,
          child: ElevatedButton(
            onPressed: () {
              // Implement share functionality
            },
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color(0xFFf4804f),
              padding: EdgeInsets.symmetric(vertical: 15.h),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(8.r),
              ),
            ),
            child: Text(
              'Share Receipt',
              style: TextStyle(
                fontSize: 16.sp,
                fontWeight: FontWeight.w500,
                color: Colors.white,
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildDetailRow(String label, String value) {
    return Column(
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              label,
              style: TextStyle(
                fontSize: 14.sp,
                color: Colors.grey[600],
              ),
            ),
            Text(
              value,
              style: TextStyle(
                fontSize: 14.sp,
                color: Colors.black,
              ),
              textAlign: TextAlign.right,
            ),
          ],
        ),
        SizedBox(height: 8.h),
        Divider(
          color: Colors.grey[300],
          height: 1,
        ),
      ],
    );
  }
}



// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:kobo_kobo/functional_util/functional_utils.dart';
// import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';
// import 'curved_painter.dart';

// class TransactionDetailsScreen extends StatelessWidget {
//   final Map<String, dynamic> transactionData;

//   const TransactionDetailsScreen({
//     Key? key,
//     required this.transactionData,
//   }) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     final bool isIncoming = !(transactionData['isOutgoing'] ?? false);

//     return AppScaffoldWidget(
//       padding: const EdgeInsets.all(0.0),
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(180.h),
//         child: Stack(
//           children: [
//             CustomPaint(
//               painter: CurvedPainter(
//                 fillColor: Colors.orange.withOpacity(0.1),
//                 borderColor: const Color(0xFFFF7517),
//                 borderWidth: 1.0,
//               ),
//               child: Container(height: 180.h),
//             ),
//             AppBar(
//               backgroundColor: Colors.transparent,
//               elevation: 0,
//               leading: IconButton(
//                 icon:
//                     const Icon(Icons.chevron_left_rounded, color: Colors.black),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               title: Text(
//                 'Transaction Details',
//                 // style: TextStyle(color: Colors.black),
//                 style: context.textTheme.bodySmall!.copyWith(
//                   color: AppColors.black.withValues(alpha: 1),
//                   fontSize: Insets.dim_18.sp,
//                   fontWeight: FontWeight.w400,
//                 ),
//               ),
//               centerTitle: true,
//             ),
//             Positioned(
//               bottom: 20.h,
//               left: 0,
//               right: 0,
//               child: Center(
//                 child: Container(
//                   width: 80.w,
//                   height: 80.w,
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     shape: BoxShape.circle,
//                     border: Border.all(
//                       color: Colors.orange,
//                       width: 1.5,
//                     ),
//                   ),
//                   child: Center(
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Container(
//                           width: 12.w,
//                           height: 12.w,
//                           decoration: const BoxDecoration(
//                             color: Colors.red,
//                             shape: BoxShape.circle,
//                           ),
//                         ),
//                         SizedBox(height: 4.h),
//                         Text(
//                           'Sterling',
//                           style: TextStyle(
//                             color: Colors.black87,
//                             fontSize: 14.sp,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ),
//                       ],
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//       body: SingleChildScrollView(
//         child: Padding(
//           padding: EdgeInsets.symmetric(horizontal: 20.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} ${transactionData['beneficiary']}',
//                   style: TextStyle(
//                     fontSize: 18.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                   textAlign: TextAlign.center,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount']}',
//                   style: TextStyle(
//                     fontSize: 32.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 10.h),
//               Center(
//                 child: Text(
//                   'Successful',
//                   style: TextStyle(
//                     color: Colors.green,
//                     fontSize: 16.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 40.h),
//               if (!isIncoming) ...[
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Service Charge',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Row(
//                       children: [
//                         Text(
//                           '₦${transactionData['serviceCharge']}',
//                           style: TextStyle(
//                             fontSize: 14.sp,
//                             color: Colors.black,
//                           ),
//                         ),
//                         SizedBox(width: 8.w),
//                       ],
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 20.h),
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Total Amount Paid',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['totalAmount']}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 30.h),
//               ],
//               if (isIncoming)
//                 _buildDetailRow('Sender', transactionData['beneficiary'])
//               else
//                 _buildDetailRow(
//                     'Beneficiary Name', transactionData['beneficiary']),
//               if (!isIncoming) ...[
//                 SizedBox(height: 30.h),
//                 Row(
//                   children: [
//                     Text(
//                       'Details',
//                       style: TextStyle(
//                         fontSize: 20.sp,
//                         fontWeight: FontWeight.bold,
//                       ),
//                     ),
//                     SizedBox(width: 8.w),
//                   ],
//                 ),
//               ] else ...[
//                 SizedBox(height: 30.h),
//                 Text(
//                   'Details',
//                   style: TextStyle(
//                     fontSize: 20.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ],
//               SizedBox(height: 20.h),
//               _buildDetailRow('Remark', transactionData['remark']),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Transaction Date', transactionData['transactionDate']),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Transaction\nReference', transactionData['reference']),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Session ID', transactionData['sessionId']),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: Padding(
//         padding: EdgeInsets.all(20.w),
//         child: SizedBox(
//           width: double.infinity,
//           child: ElevatedButton(
//             onPressed: () {
//               // Implement share functionality
//             },
//             style: ElevatedButton.styleFrom(
//               backgroundColor: const Color(0xFFf4804f),
//               padding: EdgeInsets.symmetric(vertical: 15.h),
//               shape: RoundedRectangleBorder(
//                 borderRadius: BorderRadius.circular(8.r),
//               ),
//             ),
//             child: Text(
//               'Share Receipt',
//               style: TextStyle(
//                 fontSize: 16.sp,
//                 fontWeight: FontWeight.w500,
//                 color: Colors.white,
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   Widget _buildDetailRow(String label, String value) {
//     return Column(
//       children: [
//         Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               label,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.grey[600],
//               ),
//             ),
//             Text(
//               value,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.black,
//               ),
//               textAlign: TextAlign.right,
//             ),
//           ],
//         ),
//         SizedBox(height: 8.h),
//         Divider(
//           color: Colors.grey[300],
//           height: 1,
//         ),
//       ],
//     );
//   }
// }

// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:kobo_kobo/functional_util/functional_utils.dart';
// import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';
// import 'curved_painter.dart';

// class TransactionDetailsScreen extends StatelessWidget {
//   final Map<String, dynamic> transactionData;

//   const TransactionDetailsScreen({
//     Key? key,
//     required this.transactionData,
//   }) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     final bool isIncoming = !(transactionData['isOutgoing'] ?? false);
//     final String senderOrBeneficiary = isIncoming
//         ? (transactionData['sender'] ?? 'Unknown Sender')
//         : (transactionData['beneficiary'] ?? 'Unknown Beneficiary');

//     return AppScaffoldWidget(
//       padding: const EdgeInsets.all(0.0),
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(180.h),
//         child: Stack(
//           children: [
//             CustomPaint(
//               painter: CurvedPainter(
//                 fillColor: Colors.orange.withOpacity(0.1),
//                 borderColor: const Color(0xFFFF7517),
//                 borderWidth: 1.0,
//               ),
//               child: Container(height: 180.h),
//             ),
//             AppBar(
//               backgroundColor: Colors.transparent,
//               elevation: 0,
//               leading: IconButton(
//                 icon:
//                     const Icon(Icons.chevron_left_rounded, color: Colors.black),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               title: Text(
//                 'Transaction Details',
//                 style: context.textTheme.bodySmall!.copyWith(
//                   color: AppColors.black.withValues(alpha: 1),
//                   fontSize: Insets.dim_18.sp,
//                   fontWeight: FontWeight.w400,
//                 ),
//               ),
//               centerTitle: true,
//             ),
//             Positioned(
//               bottom: 20.h,
//               left: 0,
//               right: 0,
//               child: Center(
//                 child: Container(
//                   width: 80.w,
//                   height: 80.w,
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     shape: BoxShape.circle,
//                     border: Border.all(
//                       color: Colors.orange,
//                       width: 1.5,
//                     ),
//                   ),
//                   child: Center(
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Container(
//                           width: 12.w,
//                           height: 12.w,
//                           decoration: const BoxDecoration(
//                             color: Colors.red,
//                             shape: BoxShape.circle,
//                           ),
//                         ),
//                         SizedBox(height: 4.h),
//                         Text(
//                           'Sterling',
//                           style: TextStyle(
//                             color: Colors.black87,
//                             fontSize: 14.sp,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ),
//                       ],
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//       body: SingleChildScrollView(
//         child: Padding(
//           padding: EdgeInsets.symmetric(horizontal: 20.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} $senderOrBeneficiary',
//                   style: TextStyle(
//                     fontSize: 18.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                   textAlign: TextAlign.center,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount'] ?? '0'}',
//                   style: TextStyle(
//                     fontSize: 32.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 10.h),
//               Center(
//                 child: Text(
//                   'Successful',
//                   style: TextStyle(
//                     color: Colors.green,
//                     fontSize: 16.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 40.h),
//               if (!isIncoming) ...[
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Service Charge',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['serviceCharge'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 20.h),
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Total Amount Paid',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['totalAmount'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//               ],
//               SizedBox(height: 30.h),
//               Text(
//                 'Details',
//                 style: TextStyle(
//                   fontSize: 20.sp,
//                   fontWeight: FontWeight.bold,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               _buildDetailRow(isIncoming ? 'Sender' : 'Beneficiary Name',
//                   senderOrBeneficiary),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Remark', transactionData['remark'] ?? 'No remark'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction Date',
//                   transactionData['transactionDate'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction\nReference',
//                   transactionData['reference'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Session ID', transactionData['sessionId'] ?? 'Unknown'),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: Padding(
//         padding: EdgeInsets.all(20.w),
//         child: SizedBox(
//           width: double.infinity,
//           child: ElevatedButton(
//             onPressed: () {
//               // Implement share functionality
//             },
//             style: ElevatedButton.styleFrom(
//               backgroundColor: const Color(0xFFf4804f),
//               padding: EdgeInsets.symmetric(vertical: 15.h),
//               shape: RoundedRectangleBorder(
//                 borderRadius: BorderRadius.circular(8.r),
//               ),
//             ),
//             child: Text(
//               'Share Receipt',
//               style: TextStyle(
//                 fontSize: 16.sp,
//                 fontWeight: FontWeight.w500,
//                 color: Colors.white,
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   Widget _buildDetailRow(String label, String value) {
//     return Column(
//       children: [
//         Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               label,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.grey[600],
//               ),
//             ),
//             Text(
//               value,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.black,
//               ),
//               textAlign: TextAlign.right,
//             ),
//           ],
//         ),
//         SizedBox(height: 8.h),
//         Divider(
//           color: Colors.grey[300],
//           height: 1,
//         ),
//       ],
//     );
//   }
// }

// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:kobo_kobo/functional_util/functional_utils.dart';
// import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';
// import 'curved_painter.dart';

// class TransactionDetailsScreen extends StatelessWidget {
//   final Map<String, dynamic> transactionData;

//   const TransactionDetailsScreen({
//     Key? key,
//     required this.transactionData,
//   }) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     final bool isIncoming = !(transactionData['isOutgoing'] ?? false);
//     final String senderOrBeneficiary = isIncoming
//         ? (transactionData['sender'] ?? 'Unknown')
//         : (transactionData['beneficiary'] ?? 'Unknown');

//     return AppScaffoldWidget(
//       padding: const EdgeInsets.all(0.0),
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(180.h),
//         child: Stack(
//           children: [
//             CustomPaint(
//               painter: CurvedPainter(
//                 fillColor: Colors.orange.withOpacity(0.1),
//                 borderColor: const Color(0xFFFF7517),
//                 borderWidth: 1.0,
//               ),
//               child: Container(height: 180.h),
//             ),
//             AppBar(
//               backgroundColor: Colors.transparent,
//               elevation: 0,
//               leading: IconButton(
//                 icon:
//                     const Icon(Icons.chevron_left_rounded, color: Colors.black),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               title: Text(
//                 'Transaction Details',
//                 style: context.textTheme.bodySmall!.copyWith(
//                   color: AppColors.black.withValues(alpha: 1),
//                   fontSize: Insets.dim_18.sp,
//                   fontWeight: FontWeight.w400,
//                 ),
//               ),
//               centerTitle: true,
//             ),
//             Positioned(
//               bottom: 20.h,
//               left: 0,
//               right: 0,
//               child: Center(
//                 child: Container(
//                   width: 80.w,
//                   height: 80.w,
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     shape: BoxShape.circle,
//                     border: Border.all(
//                       color: Colors.orange,
//                       width: 1.5,
//                     ),
//                   ),
//                   child: Center(
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Container(
//                           width: 12.w,
//                           height: 12.w,
//                           decoration: const BoxDecoration(
//                             color: Colors.red,
//                             shape: BoxShape.circle,
//                           ),
//                         ),
//                         SizedBox(height: 4.h),
//                         Text(
//                           'Sterling',
//                           style: TextStyle(
//                             color: Colors.black87,
//                             fontSize: 14.sp,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ),
//                       ],
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//       body: SingleChildScrollView(
//         child: Padding(
//           padding: EdgeInsets.symmetric(horizontal: 20.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} $senderOrBeneficiary',
//                   style: TextStyle(
//                     fontSize: 18.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                   textAlign: TextAlign.center,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount'] ?? '0'}',
//                   style: TextStyle(
//                     fontSize: 32.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 10.h),
//               Center(
//                 child: Text(
//                   'Successful',
//                   style: TextStyle(
//                     color: Colors.green,
//                     fontSize: 16.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 40.h),
//               if (!isIncoming) ...[
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Service Charge',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['serviceCharge'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 20.h),
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Total Amount Paid',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['totalAmount'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//               ],

//               //  SizedBox(height: 20.h),
//               _buildDetailRow(isIncoming ? 'Sender' : 'Beneficiary Name',
//                   senderOrBeneficiary),
//               SizedBox(height: 30.h),
//               Text(
//                 'Details',
//                 style: TextStyle(
//                   fontSize: 20.sp,
//                   fontWeight: FontWeight.bold,
//                 ),
//               ),

//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Remark', transactionData['remark'] ?? 'No remark'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction Date',
//                   transactionData['transactionDate'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction\nReference',
//                   transactionData['reference'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Session ID', transactionData['sessionId'] ?? 'Unknown'),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: Padding(
//         padding: EdgeInsets.all(20.w),
//         child: SizedBox(
//           width: double.infinity,
//           child: ElevatedButton(
//             onPressed: () {
//               // Implement share functionality
//             },
//             style: ElevatedButton.styleFrom(
//               backgroundColor: const Color(0xFFf4804f),
//               padding: EdgeInsets.symmetric(vertical: 15.h),
//               shape: RoundedRectangleBorder(
//                 borderRadius: BorderRadius.circular(8.r),
//               ),
//             ),
//             child: Text(
//               'Share Receipt',
//               style: TextStyle(
//                 fontSize: 16.sp,
//                 fontWeight: FontWeight.w500,
//                 color: Colors.white,
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   Widget _buildDetailRow(String label, String value) {
//     return Column(
//       children: [
//         Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               label,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.grey[600],
//               ),
//             ),
//             Text(
//               value,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.black,
//               ),
//               textAlign: TextAlign.right,
//             ),
//           ],
//         ),
//         SizedBox(height: 8.h),
//         Divider(
//           color: Colors.grey[300],
//           height: 1,
//         ),
//       ],
//     );
//   }
// }
// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:kobo_kobo/functional_util/functional_utils.dart';
// import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';
// import 'curved_painter.dart';

// class TransactionDetailsScreen extends StatelessWidget {
//   final Map<String, dynamic> transactionData;

//   const TransactionDetailsScreen({
//     Key? key,
//     required this.transactionData,
//   }) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     final bool isIncoming = !(transactionData['isOutgoing'] ?? false);
//     final String senderOrBeneficiary = isIncoming
//         ? (transactionData['sender'] ?? 'Unknown')
//         : (transactionData['beneficiary'] ?? 'Unknown');

//     return AppScaffoldWidget(
//       padding: const EdgeInsets.all(0.0),
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(180.h),
//         child: Stack(
//           children: [
//             CustomPaint(
//               painter: CurvedPainter(
//                 fillColor: Colors.orange.withOpacity(0.1),
//                 borderColor: const Color(0xFFFF7517),
//                 borderWidth: 1.0,
//               ),
//               child: Container(height: 180.h),
//             ),
//             AppBar(
//               backgroundColor: Colors.transparent,
//               elevation: 0,
//               leading: IconButton(
//                 icon:
//                     const Icon(Icons.chevron_left_rounded, color: Colors.black),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               title: Text(
//                 'Transaction Details',
//                 style: context.textTheme.bodySmall!.copyWith(
//                   color: AppColors.black.withValues(alpha: 1),
//                   fontSize: Insets.dim_18.sp,
//                   fontWeight: FontWeight.w400,
//                 ),
//               ),
//               centerTitle: true,
//             ),
//             Positioned(
//               bottom: 20.h,
//               left: 0,
//               right: 0,
//               child: Center(
//                 child: Container(
//                   width: 80.w,
//                   height: 80.w,
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     shape: BoxShape.circle,
//                     border: Border.all(
//                       color: Colors.orange,
//                       width: 1.5,
//                     ),
//                   ),
//                   child: Center(
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Container(
//                           width: 12.w,
//                           height: 12.w,
//                           decoration: const BoxDecoration(
//                             color: Colors.red,
//                             shape: BoxShape.circle,
//                           ),
//                         ),
//                         SizedBox(height: 4.h),
//                         Text(
//                           'Sterling',
//                           style: TextStyle(
//                             color: Colors.black87,
//                             fontSize: 14.sp,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ),
//                       ],
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//       body: SingleChildScrollView(
//         child: Padding(
//           padding: EdgeInsets.symmetric(horizontal: 20.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} $senderOrBeneficiary',
//                   style: TextStyle(
//                     fontSize: 18.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                   textAlign: TextAlign.center,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount'] ?? '0'}',
//                   style: TextStyle(
//                     fontSize: 32.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 10.h),
//               Center(
//                 child: Text(
//                   'Successful',
//                   style: TextStyle(
//                     color: Colors.green,
//                     fontSize: 16.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 40.h),
//               if (!isIncoming) ...[
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Service Charge',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['serviceCharge'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 20.h),
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Total Amount Paid',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['totalAmount'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//               ],
//               SizedBox(height: 30.h),
//               if (isIncoming) ...[
//                 SizedBox(height: 20.h),
//                 _buildDetailRow('Sender', senderOrBeneficiary),
//                 Text(
//                   'Details',
//                   style: TextStyle(
//                     fontSize: 20.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ] else ...[
//                 // SizedBox(height: 20.h),

//                 SizedBox(height: 30.h),
//                 Text(
//                   'Details',
//                   style: TextStyle(
//                     fontSize: 20.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ],
//               _buildDetailRow('Beneficiary Name', senderOrBeneficiary),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Remark', transactionData['remark'] ?? 'No remark'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction Date',
//                   transactionData['transactionDate'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction\nReference',
//                   transactionData['reference'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Session ID', transactionData['sessionId'] ?? 'Unknown'),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: Padding(
//         padding: EdgeInsets.all(20.w),
//         child: SizedBox(
//           width: double.infinity,
//           child: ElevatedButton(
//             onPressed: () {
//               // Implement share functionality
//             },
//             style: ElevatedButton.styleFrom(
//               backgroundColor: const Color(0xFFf4804f),
//               padding: EdgeInsets.symmetric(vertical: 15.h),
//               shape: RoundedRectangleBorder(
//                 borderRadius: BorderRadius.circular(8.r),
//               ),
//             ),
//             child: Text(
//               'Share Receipt',
//               style: TextStyle(
//                 fontSize: 16.sp,
//                 fontWeight: FontWeight.w500,
//                 color: Colors.white,
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   Widget _buildDetailRow(String label, String value) {
//     return Column(
//       children: [
//         Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               label,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.grey[600],
//               ),
//             ),
//             Text(
//               value,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.black,
//               ),
//               textAlign: TextAlign.right,
//             ),
//           ],
//         ),
//         SizedBox(height: 8.h),
//         Divider(
//           color: Colors.grey[300],
//           height: 1,
//         ),
//       ],
//     );
//   }
// }
// import 'package:flutter/material.dart';
// import 'package:flutter_screenutil/flutter_screenutil.dart';
// import 'package:kobo_kobo/functional_util/functional_utils.dart';
// import 'package:kobo_kobo/ui_widgets/ui_widgets.dart';
// import 'curved_painter.dart';

// class TransactionDetailsScreen extends StatelessWidget {
//   final Map<String, dynamic> transactionData;

//   const TransactionDetailsScreen({
//     Key? key,
//     required this.transactionData,
//   }) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     final bool isIncoming = !(transactionData['isOutgoing'] ?? false);
//     final String senderOrBeneficiary = isIncoming
//         ? (transactionData['sender'] ?? 'Unknown Sender')
//         : (transactionData['beneficiary'] ?? 'Unknown Beneficiary');

//     return AppScaffoldWidget(
//       padding: const EdgeInsets.all(0.0),
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(180.h),
//         child: Stack(
//           children: [
//             CustomPaint(
//               painter: CurvedPainter(
//                 fillColor: Colors.orange.withOpacity(0.1),
//                 borderColor: const Color(0xFFFF7517),
//                 borderWidth: 1.0,
//               ),
//               child: Container(height: 180.h),
//             ),
//             AppBar(
//               backgroundColor: Colors.transparent,
//               elevation: 0,
//               leading: IconButton(
//                 icon:
//                     const Icon(Icons.chevron_left_rounded, color: Colors.black),
//                 onPressed: () => Navigator.pop(context),
//               ),
//               title: Text(
//                 'Transaction Details',
//                 style: context.textTheme.bodySmall!.copyWith(
//                   color: AppColors.black.withValues(alpha: 1),
//                   fontSize: Insets.dim_18.sp,
//                   fontWeight: FontWeight.w400,
//                 ),
//               ),
//               centerTitle: true,
//             ),
//             Positioned(
//               bottom: 20.h,
//               left: 0,
//               right: 0,
//               child: Center(
//                 child: Container(
//                   width: 80.w,
//                   height: 80.w,
//                   decoration: BoxDecoration(
//                     color: Colors.white,
//                     shape: BoxShape.circle,
//                     border: Border.all(
//                       color: Colors.orange,
//                       width: 1.5,
//                     ),
//                   ),
//                   child: Center(
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Container(
//                           width: 12.w,
//                           height: 12.w,
//                           decoration: const BoxDecoration(
//                             color: Colors.red,
//                             shape: BoxShape.circle,
//                           ),
//                         ),
//                         SizedBox(height: 4.h),
//                         Text(
//                           'Sterling',
//                           style: TextStyle(
//                             color: Colors.black87,
//                             fontSize: 14.sp,
//                             fontWeight: FontWeight.w500,
//                           ),
//                         ),
//                       ],
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//       body: SingleChildScrollView(
//         child: Padding(
//           padding: EdgeInsets.symmetric(horizontal: 20.w),
//           child: Column(
//             crossAxisAlignment: CrossAxisAlignment.start,
//             children: [
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "Incoming" : "Outgoing"} Transfer ${isIncoming ? "from" : "to"} $senderOrBeneficiary',
//                   style: TextStyle(
//                     fontSize: 18.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                   textAlign: TextAlign.center,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               Center(
//                 child: Text(
//                   '${isIncoming ? "+" : "-"} ₦ ${transactionData['amount'] ?? '0'}',
//                   style: TextStyle(
//                     fontSize: 32.sp,
//                     fontWeight: FontWeight.bold,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 10.h),
//               Center(
//                 child: Text(
//                   'Successful',
//                   style: TextStyle(
//                     color: Colors.green,
//                     fontSize: 16.sp,
//                     fontWeight: FontWeight.w500,
//                   ),
//                 ),
//               ),
//               SizedBox(height: 40.h),
//               if (!isIncoming) ...[
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Service Charge',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['serviceCharge'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//                 SizedBox(height: 20.h),
//                 Row(
//                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                   children: [
//                     Text(
//                       'Total Amount Paid',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         color: Colors.grey[600],
//                       ),
//                     ),
//                     Text(
//                       '₦${transactionData['totalAmount'] ?? '0'}',
//                       style: TextStyle(
//                         fontSize: 14.sp,
//                         fontWeight: FontWeight.bold,
//                         color: Colors.black,
//                       ),
//                     ),
//                   ],
//                 ),
//                 SizedBox(height: 8.h),
//                 Divider(color: Colors.grey[300], height: 1),
//               ],
//               SizedBox(height: 30.h),
//               Text(
//                 'Details',
//                 style: TextStyle(
//                   fontSize: 20.sp,
//                   fontWeight: FontWeight.bold,
//                 ),
//               ),
//               SizedBox(height: 20.h),
//               _buildDetailRow(isIncoming ? 'Sender' : 'Beneficiary Name',
//                   senderOrBeneficiary),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Remark', transactionData['remark'] ?? 'No remark'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction Date',
//                   transactionData['transactionDate'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow('Transaction\nReference',
//                   transactionData['reference'] ?? 'Unknown'),
//               SizedBox(height: 20.h),
//               _buildDetailRow(
//                   'Session ID', transactionData['sessionId'] ?? 'Unknown'),
//             ],
//           ),
//         ),
//       ),
//       bottomNavigationBar: Padding(
//         padding: EdgeInsets.all(20.w),
//         child: SizedBox(
//           width: double.infinity,
//           child: ElevatedButton(
//             onPressed: () {
//               // Implement share functionality
//             },
//             style: ElevatedButton.styleFrom(
//               backgroundColor: const Color(0xFFf4804f),
//               padding: EdgeInsets.symmetric(vertical: 15.h),
//               shape: RoundedRectangleBorder(
//                 borderRadius: BorderRadius.circular(8.r),
//               ),
//             ),
//             child: Text(
//               'Share Receipt',
//               style: TextStyle(
//                 fontSize: 16.sp,
//                 fontWeight: FontWeight.w500,
//                 color: Colors.white,
//               ),
//             ),
//           ),
//         ),
//       ),
//     );
//   }

//   Widget _buildDetailRow(String label, String value) {
//     return Column(
//       children: [
//         Row(
//           mainAxisAlignment: MainAxisAlignment.spaceBetween,
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: [
//             Text(
//               label,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.grey[600],
//               ),
//             ),
//             Text(
//               value,
//               style: TextStyle(
//                 fontSize: 14.sp,
//                 color: Colors.black,
//               ),
//               textAlign: TextAlign.right,
//             ),
//           ],
//         ),
//         SizedBox(height: 8.h),
//         Divider(
//           color: Colors.grey[300],
//           height: 1,
//         ),
//       ],
//     );
//   }
// }